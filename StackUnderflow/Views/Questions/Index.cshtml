@model IEnumerable<StackUnderflow.Models.Question>

@{
	ViewBag.Title = "Index";
}

<h2>10 Most Recent</h2>
<div class="Container">
	<div class="row">

		@if (User.Identity.IsAuthenticated)
		{
			<div class="col-md-2">
				@Html.ActionLink("My Questions", "MyList", null, new { @class = "btn btn-primary" })
			</div>
			<div class="col-md-2">
				@Html.ActionLink("Ask Question", "Create", null, new { @class = "btn btn-warning" })
			</div>
		}
		<div class="col-md-6">
			<form id="search" action="/search" method="get" autocomplete="off">
				<input name="searchText" type="text" placeholder="Search Titles" value="" tabindex="1" autocomplete="off" maxlength="240">
			</form>
		</div>
	</div>
</div>
<table class="table">
	<tr>
		<th>
			Votes
		</th>
		<th>
			Answers
		</th>
		<th>
			@Html.DisplayNameFor(model => model.ViewCount)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.Title)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.QuestionDate)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.Poster.DisplayName)
		</th>
		<th></th>
	</tr>

	@foreach (var item in Model)
	{
		var upCount = int.Parse(@Html.DisplayFor(modelItem => item.Upvotes).ToString());
		var downCount = int.Parse(@Html.DisplayFor(modelItem => item.Downvotes).ToString());
		int voteSum = upCount + downCount;
		<tr>
			<td>
				 @voteSum
			</td>
			<td>
				@item.Answers.Count()
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.ViewCount)
			</td>

			<td>
				
				@Html.ActionLink(@Html.DisplayFor(modelItem => item.Title).ToString(), "Details", new { id = item.Id }) |
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.QuestionDate)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.Poster.DisplayName)
			</td>
			<td>
				@Html.ActionLink("Details", "Details", new { id = item.Id }) |
				@Html.ActionLink("Delete", "Delete", new { id = item.Id })
			</td>
		</tr>
	}

</table>
